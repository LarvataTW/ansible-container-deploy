---

- name: Log into private registry and force re-authorization
  docker_login:
    registry_url: "{{ registry_server }}"
    username: "{{ registry_username }}"
    password: "{{ registry_password }}"
    reauthorize: yes
  register: login_registry
  tags:
    - setup_docker_container

- name: Pull Container Images
  docker_image:
    name: "{{ item.registry | default('docker.io') }}/{{ item.image }}:{{ item.tag }}"
    force: true
  with_items: '{{ containers | default([]) }}'
  register: pull_container_images
  when: login_registry
  tags:
    - setup_docker_container

- name: Create config files
  include: setup_config.yml template={{ item }}
  tags:
    - setup_config
  with_items: '{{ templates | default([]) }}'
  when: pull_container_images

- name: Create Container Networks
  docker_network:
    name: "{{ item }}"
    appends: yes
  with_items:
      - "{{ container_networks | default([]) }}"
  register: create_container_networks
  tags:
    - setup_docker_container

- name: Create Container Volumes
  docker_volume:
    name: "{{ item }}"
  with_items:
      - "{{ container_volumes | default([]) }}"
  register: create_container_volumes
  tags:
    - setup_docker_container

- name: Running Containers
  docker_container:
    name: "{{ item.name }}"
    image: "{{ item.registry | default('docker.io') }}/{{ item.image }}:{{ item.tag }}"
    state: started
    restart_policy: "{{ item.restart_policy | default('always') }}"
    recreate: "{{ item.recreate | default(omit) }}"
    cpuset_cpus: "{{ item.cpuset_cpus | default(omit) }}"
    ports: "{{ item.ports | default(omit) }}"
    env: "{{ item.env | default(omit) }}"
    env_file: "{{ item.env_file | default(omit) }}"
    links: "{{ item.links | default(omit) }}"
    volumes: "{{ item.volumes | default(omit) }}"
    networks: "{{ item.networks | default(omit) }}"
    entrypoint: "{{ item.entrypoint | default(omit) }}"
    command: "{{ item.command | default(omit) }}"
    healthcheck: "{{ item.healthcheck | default(omit) }}"
  with_items: '{{ containers | default([]) }}'
  when: pull_container_images and create_container_networks
  tags:
    - setup_docker_container
